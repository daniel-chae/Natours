@charset "UTF-8";
/* Universal reset */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit; }

html {
  font-size: 62.5%; }

/* Universal font definition through inheritance */
body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 1.6rem;
  line-height: 1.7;
  color: #777;
  padding: 3rem;
  box-sizing: border-box;
  /* Border and padding are not added to the height and width of the element */ }

.header {
  height: 95vh;
  background-image: linear-gradient(135deg, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg);
  /* to right | to right bottom | to left | 90deg */
  background-size: cover;
  /* Even if the width of the image is bigger than the viewport, it tries to fit the image within the container. Horizontal part will be cut-off. Which part to be cut off is decided by background-position*/
  background-position: top;
  /* bottom|center */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  /* polygon: 다각형 */
  position: relative; }
  .header__logo-box {
    position: absolute;
    /* absolute position starts from parent element which has the relative position */
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
    /* inline block works just like a text. If we want to align them, we have to use text-align not margin. for white button*/ }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden;
  /*  */
  margin-bottom: 6rem; }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
    /* ease|ease-in|ease-out|ease-in-out|liner|etc. */
    /* animation-iteration-count: 3; how many times the animation to happen*/
    /* animation-delay: 3s; when this to happen*/ }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    animation: moveInRight 1s ease-out; }

/* Buttons */
.btn:link, .btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  /* In default <a> tag is inline element */
  border-radius: 10rem;
  transition: all .3s;
  /* Transition must be placed in the original state */
  position: relative; }

.btn:hover {
  transform: translateY(-0.3rem);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
  /* offset to X, offset to Y, blur, color of shadow*/ }
  .btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0; }

.btn:active {
  /* When we click a button */
  transform: translateY(-0.1rem);
  /* not from the previous position but from the original position */
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
  /* offset to X, offset to Y, blur */ }

.btn--white {
  color: #777;
  background-color: #fff; }
  .btn--white::after {
    background-color: #fff; }

.btn::after {
  /* Right after the element */
  content: "";
  /* content must be specificed any time */
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all .4s; }

.btn--animated {
  animation: moveInBottom 1s ease-out .75s;
  /* last attribute is animation delay */
  animation-fill-mode: backwards;
  /* apply animation at 0% automatically before the start */ }

/* Animations */
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1; } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1; } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  80% {
    transform: translateY(-1rem); }
  100% {
    opacity: 1; } }
